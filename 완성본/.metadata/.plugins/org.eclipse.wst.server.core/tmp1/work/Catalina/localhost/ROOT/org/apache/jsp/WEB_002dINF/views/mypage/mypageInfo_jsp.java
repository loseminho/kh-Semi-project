/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-09-26 09:11:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.earthpurging.index.model.vo.ChellengeMemberData;
import com.earthpurging.member.model.vo.Member;

public final class mypageInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1664172377681L));
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1663920910595L));
    _jspx_dependants.put("/WEB-INF/views/mypage/mypageSide.jsp", Long.valueOf(1663920910601L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.earthpurging.index.model.vo.ChellengeMemberData");
    _jspx_imports_classes.add("com.earthpurging.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");



      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>마이페이지 - 내정보</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/style-mypage-admin.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        .btn-pw-change:disabled,\r\n");
      out.write("        .btn-addr-search:disabled,\r\n");
      out.write("        button[type=submit]:disabled{\r\n");
      out.write("            opacity: .4;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"wrapper\">\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

		Member m = (Member)session.getAttribute("m");
    
    	ChellengeMemberData cmd = (ChellengeMemberData)session.getAttribute("cmd"); 
	
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700;800&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/default.css\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/jquery-3.6.0.js\"></script>\r\n");
      out.write("<!-- header -->\r\n");
      out.write("<header>\r\n");
      out.write("    <div class=\"header-container\">\r\n");
      out.write("        <div class=\"header-top\">\r\n");
      out.write("            <div class=\"header-logo\">\r\n");
      out.write("                <a href=\"/\"><img src=\"/img/common/logo-plogging.png\" alt=\"plogging\"></a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"header-center\">\r\n");
      out.write("                <a href=\"/\"><img src=\"/img/common/img-main-title.png\" alt=\"\"></a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"header-button\">\r\n");
      out.write("                <a href=\"\" >지구쓰담 후원하기</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"header-bottom\">\r\n");
      out.write("            <ul class=\"header-menu\">\r\n");
      out.write("                <li><a href=\"javascript:void(0);\">줍깅 캠페인</a></li>\r\n");
      out.write("                <li><a href=\"/chellengeFrm.do?reqPage=1\">쓰담위크 퀘스트</a></li>\r\n");
      out.write("                <li><a href=\"/storyList.do?reqPage=1\">쓰담 스토리</a></li>\r\n");
      out.write("                <li><a href=\"javascript:void(0);\">쓰담 굿즈</a></li>\r\n");
      out.write("                <li><a href=\"/noticeList.do?reqPage=1\">쓰담 소식</a></li>\r\n");
      out.write("                <li><a href=\"/plogging.do\">진행중인 플로깅</a></li>\r\n");
      out.write("                ");
if(m!=null && m.getMemberLevel() == 1) {
      out.write("\r\n");
      out.write("                <li><a href=\"/admin.do\">관리자</a></li>\r\n");
      out.write("                ");
}
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("            <ul class=\"util-menu\">\r\n");
      out.write("                ");
if(m!=null){
      out.write("\r\n");
      out.write("                <li><a href=\"/mypage.do\">");
      out.print(m.getNickname());
      out.write("</a></li>\r\n");
      out.write("                <li><a href=\"/logout.do\">로그아웃</a></li>\r\n");
      out.write("                ");
} else {
      out.write("\r\n");
      out.write("                <li><a href=\"/common/signinFrm.jsp\">로그인/회원가입</a></li>\r\n");
      out.write("                ");
}
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</header>\r\n");
      out.write("<!-- // header -->");
      out.write("\r\n");
      out.write("        <!-- content -->\r\n");
      out.write("        <div class=\"page-content mypage-info\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"content-wrap flex\">\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"side-menu\">\r\n");
      out.write("    <ul>\r\n");
      out.write("        <li class=\"active\"><a href=\"/mypage.do\">메인</a></li>\r\n");
      out.write("        <li><a href=\"/mypageInfo.do\">나의 정보</a></li>\r\n");
      out.write("        <li><a href=\"/mypageDonationList.do\">후원내역</a></li>\r\n");
      out.write("        <li><a href=\"/mypagePloggingList.do\">플로깅 신청내역</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"content-container\">\r\n");
      out.write("                    <div class=\"content-title\">\r\n");
      out.write("                        <h1>나의 정보</h1>\r\n");
      out.write("                        <p>오늘도 열심히 푸르깅!</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"content-body\">\r\n");
      out.write("                        <form action=\"/updateMyInfo.do\" method=\"post\">\r\n");
      out.write("                            <input type=\"hidden\" id=\"beforeMemberId\" name=\"beforeMemberId\" value=\"");
      out.print(m.getMemberId());
      out.write("\">\r\n");
      out.write("                            <div class=\"input-line\">\r\n");
      out.write("                                <label for=\"memberId\">아이디</label>\r\n");
      out.write("                                <input type=\"text\" name=\"memberId\" id=\"memberId\" class=\"input-form info-mod\" value=\"");
      out.print(m.getMemberId());
      out.write("\" readonly>\r\n");
      out.write("                                <span class=\"comment\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"input-line\">\r\n");
      out.write("                                <label for=\"memberPw\">비밀번호</label>\r\n");
      out.write("                                <button type=\"button\" class=\"btn bc2 btn-pw-change info-mod\" disabled>비밀번호변경</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"input-line\" style=\"display:none\">\r\n");
      out.write("                                <!-- <label for=\"memberPw\">비밀번호</label> -->\r\n");
      out.write("                                <input type=\"password\" name=\"memberPw\" id=\"memberPw\" class=\"input-form\" value=\"\" disabled>\r\n");
      out.write("                                <span class=\"comment\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"input-line\" style=\"display:none\">\r\n");
      out.write("                                <label for=\"memberPwRe\">비밀번호 확인</label>\r\n");
      out.write("                                <input type=\"password\" name=\"memberPwRe\" id=\"memberPwRe\" class=\"input-form\" value=\"\" disabled>\r\n");
      out.write("                                <span class=\"comment\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"input-line\">\r\n");
      out.write("                                <label for=\"memberName\">이름</label>\r\n");
      out.write("                                <input type=\"text\" name=\"memberName\" id=\"memberName\" class=\"input-form info-mod\" value=\"");
      out.print(m.getMemberName());
      out.write("\" readonly>\r\n");
      out.write("                                <span class=\"comment\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"input-line\">\r\n");
      out.write("                                <label for=\"memberNickname\">닉네임</label>\r\n");
      out.write("                                <input type=\"text\" name=\"memberNickname\" id=\"memberNickname\" class=\"input-form info-mod\" value=\"");
      out.print(m.getNickname());
      out.write("\" readonly>\r\n");
      out.write("                                <span class=\"comment\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"input-line\">\r\n");
      out.write("                                <label for=\"memberEmail\">이메일</label>\r\n");
      out.write("                                <input type=\"text\" name=\"memberEmail\" id=\"memberEmail\" class=\"input-form info-mod\" value=\"");
      out.print(m.getMemberEmail());
      out.write("\" readonly>\r\n");
      out.write("                                <span class=\"comment\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"input-line\">\r\n");
      out.write("                                <label for=\"memberAddr\">주소</label>\r\n");
      out.write("                                <div class=\"input-group\">\r\n");
      out.write("                                    <input type=\"text\" name=\"memberAddr\" id=\"memberAddr\" class=\"input-form\" value=\"");
      out.print(m.getMemberAddr());
      out.write("\" readonly>\r\n");
      out.write("                                    <button type=\"button\" class=\"btn bc1 br-none btn-addr-search info-mod\" disabled>주소검색</button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <input type=\"text\" class=\"input-form info-mod\" id=\"addrDetail\" id=\"addrDetail\" placeholder=\"상세주소\"  readonly>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"input-line\">\r\n");
      out.write("                                <label for=\"totalPoint\">플로깅 점수</label>\r\n");
      out.write("                                <input type=\"text\" name=\"totalPoint\" id=\"totalPoint\" class=\"input-form\" readonly>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <button type=\"button\" class=\"btn-user-del\">회원탈퇴하기</button>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"form-btn\">\r\n");
      out.write("                                <button type=\"button\" class=\"btn-mod btn bc4\">수정하기</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- // content -->\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("<!-- footer -->\r\n");
      out.write("<footer class=\"footer\">\r\n");
      out.write("    <div class=\"footer_wrap\">\r\n");
      out.write("        <div class=\"footer_text\">\r\n");
      out.write("            <p>재단법인 환경재단</p>\r\n");
      out.write("            <p>대표 진민호 대표전화 02-1111-1111 fax 02-111-1111</p>\r\n");
      out.write("            <p>문의 이메일 jinminho@kh.or.kr</p>\r\n");
      out.write("            <p>서울시 영등포구</p>\r\n");
      out.write("            <p>사업자 등록번호 111-11-11111</p>\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"#\">이용약관</a></li>\r\n");
      out.write("                <li><a href=\"#\">개인정보처리방침</a></li> \r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</footer>\r\n");
      out.write("<!-- // footer -->");
      out.write("\r\n");
      out.write("        <script src=\"/js/sideMenu.js\"></script>\r\n");
      out.write("        <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("        <script src=\"/js/sweetalert.min.js\"></script>\r\n");
      out.write("                <script>\r\n");
      out.write("                    const userInfo = {\r\n");
      out.write("                        memberId : \"");
      out.print(m.getMemberId());
      out.write("\",\r\n");
      out.write("                        memberName : \"");
      out.print(m.getMemberName());
      out.write("\",\r\n");
      out.write("                        memberNickname : \"");
      out.print(m.getNickname());
      out.write("\",\r\n");
      out.write("                        memberEmail: \"");
      out.print(m.getMemberEmail());
      out.write("\",\r\n");
      out.write("                        memberAddr: \"");
      out.print(m.getMemberAddr());
      out.write("\"\r\n");
      out.write("                    };\r\n");
      out.write("\r\n");
      out.write("                    let validation = false;\r\n");
      out.write("                    let pwValidation = false;\r\n");
      out.write("\r\n");
      out.write("                    $(document).ready(function(){\r\n");
      out.write("\r\n");
      out.write("                        const searchBtn = document.querySelector(\".btn-addr-search\");\r\n");
      out.write("                        searchBtn.addEventListener(\"click\", function() {\r\n");
      out.write("                            new daum.Postcode({\r\n");
      out.write("                                oncomplete: function(data) {\r\n");
      out.write("                                    //console.log(data);\r\n");
      out.write("                                    const addrForm1 = document.querySelector(\"#memberAddr\");\r\n");
      out.write("                                    const address = data.address;\r\n");
      out.write("                                    addrForm1.value = address;\r\n");
      out.write("                                    if(addrForm1.value != userInfo[\"memberAddr\"]) {\r\n");
      out.write("                                        $(addrForm1).change();\r\n");
      out.write("                                        validation = true;\r\n");
      out.write("                                    } else {\r\n");
      out.write("                                        validation = false;\r\n");
      out.write("                                    }\r\n");
      out.write("\r\n");
      out.write("                                }\r\n");
      out.write("                            }).open();\r\n");
      out.write("                        })\r\n");
      out.write("\r\n");
      out.write("                        $(\".input-form\").on({\r\n");
      out.write("                            \"change\" : function() {\r\n");
      out.write("                                const input = $(this);\r\n");
      out.write("                                const inputVal = $(this).val();\r\n");
      out.write("                                const inputId = $(this).attr(\"id\");\r\n");
      out.write("                                const inputLine = $(this).parent();\r\n");
      out.write("                                const comment = $(this).next();\r\n");
      out.write("\r\n");
      out.write("                                const confirmValue = function(regex, str){\r\n");
      out.write("                                    if(regex.test(inputVal)){\r\n");
      out.write("                                        inputLine.removeClass(\"is-invalid\");\r\n");
      out.write("                                        comment.text(\"\");\r\n");
      out.write("                                        validation = true;\r\n");
      out.write("                                    } else {\r\n");
      out.write("                                        inputLine.addClass(\"is-invalid\");\r\n");
      out.write("                                        comment.text(str);\r\n");
      out.write("                                        validation = false;\r\n");
      out.write("                                        input.focus();\r\n");
      out.write("                                    }\r\n");
      out.write("                                }\r\n");
      out.write("\r\n");
      out.write("                                if(inputVal != \"\") {\r\n");
      out.write("                                    if(inputId == \"memberId\" ) {\r\n");
      out.write("\r\n");
      out.write("                                        const idReg = /^[a-zA-Z0-9]{6,20}$/;\r\n");
      out.write("                                        confirmValue(idReg, \"아이디는 대/소문자, 영문으로 6~20자 입니다.\");\r\n");
      out.write("\r\n");
      out.write("                                        if(inputVal != userInfo[\"memberId\"] && idReg.test(inputVal)) {\r\n");
      out.write("                                            $.ajax({\r\n");
      out.write("                                                url :\"/ajaxMyInfoCheckId.do\",\r\n");
      out.write("                                                type : \"get\",\r\n");
      out.write("                                                async: false,\r\n");
      out.write("                                                data : {memberId:inputVal},\r\n");
      out.write("                                                success : function(data) {\r\n");
      out.write("\r\n");
      out.write("                                                    if(data == \"1\") {\r\n");
      out.write("                                                        inputLine.addClass(\"is-invalid\");\r\n");
      out.write("                                                        comment.text(\"중복된 아이디 입니다.\");\r\n");
      out.write("                                                        validation = false;\r\n");
      out.write("                                                    } else {\r\n");
      out.write("                                                        inputLine.removeClass(\"is-invalid\");\r\n");
      out.write("                                                        comment.text(\"\");\r\n");
      out.write("                                                        validation = true;\r\n");
      out.write("\r\n");
      out.write("                                                    }\r\n");
      out.write("                                                }\r\n");
      out.write("                                            })\r\n");
      out.write("                                        }\r\n");
      out.write("                                        confirmValue(idReg, \"아이디는 대/소문자, 영문으로 6~20자 입니다.\");\r\n");
      out.write("                                    } else if (inputId == \"memberName\") {\r\n");
      out.write("                                        const nameRef = /^[가-힣]{2,5}$/;\r\n");
      out.write("                                        confirmValue(nameRef, \"이름은 한글 2~5자 입니다.\");\r\n");
      out.write("                                    } else if (inputId == \"memberNickname\") {\r\n");
      out.write("                                        const nicknameRef = /^[가-힣]{2,8}$/;\r\n");
      out.write("                                        confirmValue(nicknameRef, \"닉네임은 한글 2~8자 입니다.\");\r\n");
      out.write("                                    } else if (inputId == \"memberEmail\") {\r\n");
      out.write("                                        const emailRef = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("                                        confirmValue(emailRef, \"이메일 형식이 아닙니다.\");\r\n");
      out.write("                                    } else if (inputId == \"memberAddr\") {\r\n");
      out.write("                                        if(inputVal != userInfo[\"memberAddr\"]) {\r\n");
      out.write("                                            validation = true;\r\n");
      out.write("                                        } else {\r\n");
      out.write("                                            validation = false;\r\n");
      out.write("                                        }\r\n");
      out.write("\r\n");
      out.write("                                    }\r\n");
      out.write("                                }\r\n");
      out.write("\r\n");
      out.write("                                if (inputId == \"memberPwRe\" || inputId == \"memberPw\"){\r\n");
      out.write("                                    const pwReg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$/;\r\n");
      out.write("\r\n");
      out.write("                                    if(pwReg.test(inputVal) && $(\"[name=memberPw]\").val() == inputVal && $(\"[name=memberPwRe]\").val() == inputVal ) {\r\n");
      out.write("                                        $(\"[name=memberPwRe]\").parent().removeClass(\"is-invalid\");\r\n");
      out.write("                                        $(\"[name=memberPwRe]\").next().text(\"\");\r\n");
      out.write("                                        validation = true;\r\n");
      out.write("                                    } else {\r\n");
      out.write("                                        $(\"[name=memberPwRe]\").parent().addClass(\"is-invalid\");\r\n");
      out.write("                                        $(\"[name=memberPwRe]\").next().text(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("                                        if($(\"[name=memberPwRe]\").val()!=\"\") {\r\n");
      out.write("                                            input.focus();\r\n");
      out.write("                                        }\r\n");
      out.write("                                        validation = false;\r\n");
      out.write("                                    }\r\n");
      out.write("                                }\r\n");
      out.write("\r\n");
      out.write("                                if($(\"[name=memberPw]\").prop(\"disabled\") == false) {\r\n");
      out.write("                                    if(validation) {\r\n");
      out.write("                                        modBtn.disabled = false;\r\n");
      out.write("                                    } else{\r\n");
      out.write("                                        modBtn.disabled = true;\r\n");
      out.write("                                    }\r\n");
      out.write("                                } else {\r\n");
      out.write("                                    validationCheck();\r\n");
      out.write("                                }\r\n");
      out.write("\r\n");
      out.write("                            },\r\n");
      out.write("                            \"keyup\" : function() {\r\n");
      out.write("\r\n");
      out.write("                                const input = $(this);\r\n");
      out.write("                                const inputVal = input.val();\r\n");
      out.write("                                const inputId = input.attr(\"id\");\r\n");
      out.write("                                const inputLine = $(this).parent();\r\n");
      out.write("                                const comment = $(this).next();\r\n");
      out.write("\r\n");
      out.write("                                if(inputId == \"memberPw\") {\r\n");
      out.write("                                    const pwReg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$/;\r\n");
      out.write("                                    const confirmValue = function(regex, str){\r\n");
      out.write("\r\n");
      out.write("                                        if(regex.test(inputVal)){\r\n");
      out.write("                                            inputLine.removeClass(\"is-invalid\");\r\n");
      out.write("                                            comment.text(\"\");\r\n");
      out.write("                                            validation = true;\r\n");
      out.write("                                        } else {\r\n");
      out.write("                                            inputLine.addClass(\"is-invalid\");\r\n");
      out.write("                                            comment.text(str);\r\n");
      out.write("                                            validation = false;\r\n");
      out.write("\r\n");
      out.write("                                        }\r\n");
      out.write("                                    }\r\n");
      out.write("\r\n");
      out.write("                                    confirmValue(pwReg, \"8~20자 영문 대 소문자, 숫자, 특수문자를 사용하세요.\");\r\n");
      out.write("                                    if(inputVal == $(\"[name=memberPwRe]\").val() && inputVal == $(\"[name=memberPw]\").val() && pwReg.test(inputVal)) {\r\n");
      out.write("                                        $(\"[name=memberPwRe]\").parent().removeClass(\"is-invalid\");\r\n");
      out.write("                                        $(\"[name=memberPwRe]\").next().text(\"\");\r\n");
      out.write("                                        validation = true;\r\n");
      out.write("                                    } else {\r\n");
      out.write("                                        if($(\"[name=memberPwRe]\").val() != \"\") {\r\n");
      out.write("                                            $(\"[name=memberPwRe]\").parent().addClass(\"is-invalid\");\r\n");
      out.write("                                            $(\"[name=memberPwRe]\").next().text(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("                                            input.focus();\r\n");
      out.write("                                        }\r\n");
      out.write("                                        validation = false;\r\n");
      out.write("                                    }\r\n");
      out.write("\r\n");
      out.write("                                    if($(\"[name=memberPw]\").prop(\"disabled\") == false) {\r\n");
      out.write("                                        if(validation) {\r\n");
      out.write("                                            //if(validation && pwValidation ) {\r\n");
      out.write("                                            modBtn.disabled = false;\r\n");
      out.write("                                        } else{\r\n");
      out.write("                                            modBtn.disabled = true;\r\n");
      out.write("                                        }\r\n");
      out.write("                                    } else {\r\n");
      out.write("                                        validationCheck();\r\n");
      out.write("                                    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                }\r\n");
      out.write("                            }\r\n");
      out.write("                        })\r\n");
      out.write("                    })\r\n");
      out.write("\r\n");
      out.write("                    function validationCheck() {\r\n");
      out.write("                        if(validation && ($(\"[name=memberId]\").val() != userInfo[\"memberId\"] || $(\"[name=memberName]\").val() != userInfo[\"memberName\"] ||  $(\"[name=memberNickname]\").val() != userInfo[\"memberNickname\"] || $(\"[name=memberEmail]\").val() != userInfo[\"memberEmail\"] || $(\"[name=memberAddr]\").val() != userInfo[\"memberAddr\"])) {\r\n");
      out.write("                            modBtn.disabled = false;\r\n");
      out.write("                        } else{\r\n");
      out.write("                            modBtn.disabled = true;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    const btnPwChange = document.querySelector(\".btn-pw-change\");\r\n");
      out.write("\r\n");
      out.write("                    btnPwChange.addEventListener(\"click\", function(){\r\n");
      out.write("\r\n");
      out.write("                        const pwForm1 = document.querySelector(\"[name=memberPw]\");\r\n");
      out.write("                        const pwForm2 = document.querySelector(\"[name=memberPwRe]\");\r\n");
      out.write("\r\n");
      out.write("                        if(!this.classList.contains(\"active\")){\r\n");
      out.write("                            pwForm1.parentNode.style.display = \"flex\";\r\n");
      out.write("                            pwForm2.parentNode.style.display = \"flex\";\r\n");
      out.write("                            pwForm1.disabled = false;\r\n");
      out.write("                            pwForm2.disabled = false;\r\n");
      out.write("                            this.classList.add(\"active\");\r\n");
      out.write("                            if(pwForm1.value == \"\" || pwForm2.value == \"\" ) {\r\n");
      out.write("                                modBtn.disabled = true;\r\n");
      out.write("                            }\r\n");
      out.write("                        } else {\r\n");
      out.write("\r\n");
      out.write("                            pwForm1.value = \"\";\r\n");
      out.write("                            pwForm2.value = \"\";\r\n");
      out.write("                            pwForm1.parentNode.style.display = \"none\";\r\n");
      out.write("                            pwForm2.parentNode.style.display = \"none\";\r\n");
      out.write("                            pwForm1.disabled = true;\r\n");
      out.write("                            pwForm2.disabled = true;\r\n");
      out.write("                            this.classList.remove(\"active\");\r\n");
      out.write("                            validationCheck();\r\n");
      out.write("                        }\r\n");
      out.write("\r\n");
      out.write("                    })\r\n");
      out.write("\r\n");
      out.write("                    const modBtn = document.querySelector(\".btn-mod\");\r\n");
      out.write("\r\n");
      out.write("                    modBtn.addEventListener(\"click\", function(e) {\r\n");
      out.write("\r\n");
      out.write("                        if(this.classList.contains(\"btn-mod\")){\r\n");
      out.write("                            e.preventDefault();\r\n");
      out.write("                            this.disabled = true;\r\n");
      out.write("                        }\r\n");
      out.write("\r\n");
      out.write("                        this.setAttribute(\"type\", \"submit\");\r\n");
      out.write("                        this.className = \"btn bc2\";\r\n");
      out.write("                        this.innerText = '수정완료';\r\n");
      out.write("\r\n");
      out.write("                        const infoMod = document.querySelectorAll(\".info-mod\");\r\n");
      out.write("                        infoMod.forEach(function(item, idx) {\r\n");
      out.write("                            if(item.disabled){\r\n");
      out.write("                                item.disabled = false;\r\n");
      out.write("                            }\r\n");
      out.write("                            if(item.readOnly){\r\n");
      out.write("                                item.readOnly = false;\r\n");
      out.write("                            }\r\n");
      out.write("                        })\r\n");
      out.write("\r\n");
      out.write("                    })\r\n");
      out.write("\r\n");
      out.write("                    const userDelBtn = document.querySelector(\".btn-user-del\");\r\n");
      out.write("                    userDelBtn.addEventListener(\"click\", function() {\r\n");
      out.write("                        swal({\r\n");
      out.write("                            title: \"탈퇴하시겠습니까?\",\r\n");
      out.write("                            text: \"\",\r\n");
      out.write("                            icon: \"warning\",\r\n");
      out.write("                            buttons: true,\r\n");
      out.write("                            dangerMode: true,\r\n");
      out.write("                            buttons: [\"취소\", \"탈퇴하기\"],\r\n");
      out.write("\r\n");
      out.write("                        })\r\n");
      out.write("                        .then((willDelete) => {\r\n");
      out.write("                            if (willDelete) {\r\n");
      out.write("                                window.location = \"/deleteMember.do?memberId=");
      out.print(m.getMemberId());
      out.write(" \";\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                    })\r\n");
      out.write("\r\n");
      out.write("        </script>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
